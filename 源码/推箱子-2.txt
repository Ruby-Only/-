项目：推箱子
软件：JDK6,7 + Eclipse3.X
时间：11月4,6,8,10,12共计5天
------------------------------------------
2013年11月4日课程复习
1.安装JDK与eclipse
2.制作窗口――Frame
3.制作背景图片――JLabel
	配合布局使用,选用空布局――自由布局模式

2013年11月6日课程内容
推箱子人物（灰太狼)制作及人物移动控制
人物制作
1.人物制作也是一张图片的结构，因此在制作时可以像制作背景图片一样的方式制作
2.为了使人物的制作独立处理，需要设置一个单独的方法来完成
private void wolfInit()
3.制作过程同背景制作过程
3.1制作一个图片的对象，使用的素材图片最好是透明背景的，并且尺寸要提前计算
Icon i = new ImageIcon("wolf-zm.png");
3.2使用一个放置图片的组件，将图片放进去
JLabel lab_wolf = new JLabel(i);
3.3设置该组件的显示位置与显示大小，大小要参看原始图片的尺寸
   当前的位置是随意设置的，大小是根据图片的大小设置的
lab_wolf.setBounds(300, 300, 50, 50);
3.4将组件添加到窗体中
this.add(lab_wolf);
4.注意事项：由于制作多个图片组件放入到窗体中时存在放入的顺序，先放入的在
            最上面，后放入的在最下面，所以要根据需要调整该位置


2.事件监听机制
要达到以下目标：
点击键盘上的右键(→)，想让人物向右移动一下
如何让JAVA语言知道我们点击键盘了？
需要使用JAVA中的事件监听机制
1.为窗口添加一个可以监督用户是否点击键盘的监听器
this.addKeyListener(this);
上述语句可以写在窗口初始化的后面
2.上述语句添加完毕后，会出现错误，点击错误标志，选择Let开始的选项
使当前类实现一个监听接口，有关接口的内容到黑马课程中面向对象知识中查找
3.上述操作执行完毕后，在最上面(class定义位置)又会出现一个错误
点击错误标志后选择add unimplemented methods选项
一个类实现了一个接口后，要实现这个接口中所有的抽象方法
此步骤完成后，会在整个文件的最后出现三个方法
public void keyPressed(KeyEvent e) {
}
public void keyReleased(KeyEvent e) {
}
public void keyTyped(KeyEvent e) {
}
4.在下面的方法中添加一句话，测试一下，是不是运行？
public void keyReleased(KeyEvent e) {
	System.out.println("测试一下");
}
如何运行程序后，点击键盘能够看到显示文字，恭喜你，键盘控制成功

如何知道我们点击键盘上面的右键，而不是其他键
Java语言中提供了一个东西，键码值，通过输入的按键不同，得到的键码值不同
int key = e.getKeyCode();
左 37	上 38	右 39	下 40
通过键码值分辨出你点击的是哪个按键


人物移动控制
点击了右键后，如何让人物动起来
1.首先获取一下人物当前的位置
lab_wolf.getLocation()
位置获取后，里面有一个x值，还有一个y值
int x =(int)lab_wolf.getLocation().getX();
int y =(int)lab_wolf.getLocation().getY();
2.设置人物的位置，使用前面设置窗口的操作方式来进行
lab_wolf.setLocation(x+50,y);
以上内容为向右移动
如果向左移动，横向-50，纵向不变
如果向上移动，纵向-50，横向不变
如果向下移动，纵向+50，横向不变

人物移动后要对人物的图片进行更新
1.设置要更新的图片内容
Icon i = new ImageIcon("wolf-sm.png");
2.将该图片设置到对应的组件上面
lab_wolf.setIcon(i);













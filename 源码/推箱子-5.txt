项目：推箱子
软件：JDK6,7 + Eclipse3.X
时间：11月4,6,8,10,12共计5天
------------------------------------------
2013年11月10日课程复习
人物移动碰墙试验
人物移动碰箱试验（上）
检测前方移动方向上第一格的数据是不是4(规定)

2013年11月12日课程内容(完结篇)
人物移动碰箱试验（下）
要想让箱子移动，首先要获取箱子对应的对象JLabel
设计一个与数据模型完全相同的JLabel组件数组模型
JLabel[][] sheeps = new JLabel[12][16];
上述代码放入到整体的类中，也可以看做是放到数组的上面或者下面
组件模型中当前是没有任何东西的，我们的箱子在创建时必须将其添加进去
sheeps[4][6] = lab_sheep1;
sheeps[6][6] = lab_sheep2;
sheeps[8][6] = lab_sheep3;

箱子模型获取到后，所谓的推箱子就是修改该模型对应的位置
移动后，箱子对应的位置应该是与狼原始未移动的位置相差100(方向上)
sheeps[wy][wx+1].setLocation(12+wx*50+100,36+wy*50);

当箱子发生移动时，需要对模型所在的位置进行修改
箱子移动后的位置的数据应该等于箱子移动前的位置上的数据
sheeps[wy][wx+2] = sheeps[wy][wx+1];
箱子移动前位置上的数据就不存在了
sheeps[wy][wx+1] = null;

总结：
人物碰撞试验要分三种情况
1.人物移动方向前方是空地
直接移动一位，修改人物坐标
2.人物移动方向前方是障碍
什么事情都不做
3.人物移动方向前方是箱子
3.1人物移动方向前方1位是箱子2位是空地
人物移动一位，箱子移动一位
人物坐标修改，箱子对应的数据修改，箱子模型sheeps坐标修改
3.2人物移动方向前方1位是箱子2位是箱子/树
什么事情都不做

胜利判定
所谓胜利就是所有的箱子全部进入到目标中
如果有3个箱子，最终就是3个箱子进目标
设计一个变量，用于记录一共有多少个箱子
int total = 3;
设计一个变量，用于记录当前有多少个箱子进入到了目标中
int num = 0;

如果上面的两个变量值相等了，搞定
胜利后想做什么样的事情，根据需要进行设计

什么时候改变num值？
当箱子进入到目标时，num加1
当箱子从目标冲离开时,num减1
当箱子从目标中离开进入到另一个目标时,num不变

考虑一下整体模型设计
树木		1
箱子		4
目标		8
箱子目标		12

人物的坐标发生变化：人坐标
人物的图片发生变化：人图片
人物的显示位置变化：人显示位置
箱子的显示位置变化：箱子位置
箱子的模型位置：箱JLabel
数据模型空地到箱子：4-0	0-4

所有人物移动的情况全部设计出来
-----人物	树木
-----人物	箱子		树木
-----人物	箱子		箱子
-----人物	箱子		目标箱子
-----人物	目标箱子		树木
-----人物	目标箱子		箱子
-----人物	目标箱子		目标箱子
不做任何事情
-----人物	空地
-----人物	空目标
人坐标	人图片	人显示位置
-----人物	箱子		空地
人坐标	人图片	人显示位置	箱子位置		箱JLabel		4-0	0-4
-----人物	箱子		空目标
人坐标	人图片	人显示位置	箱子位置		箱JLabel		4-0	8-12  num++;
-----人物	目标箱子		空地
人坐标	人图片	人显示位置	箱子位置		箱JLabel		12-8	0-4   num--;
-----人物	目标箱子		空目标
人坐标	人图片	人显示位置	箱子位置		箱JLabel		12-8	8-12












